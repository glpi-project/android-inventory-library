version: 2
reference:

  ## Workspaces
  workspace: &workspace
    ~/flyve_mdm

  ## Docker image configurations
  android_config: &android_config
    working_directory: *workspace
    docker:
      # Android the primary container
      - image: circleci/android:api-29-node
    environment:
      JVM_OPTS: -Xmx3200m

  ## Cache
  gradle_key: &gradle_key
    jars-{{ checksum "build.gradle" }}-{{ checksum  "inventory/build.gradle" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  ## Dependencies
  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle install --path vendor/bundle

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

  validate_running: &validate_running
    run:
      name: Validate running
      command: source ci/scripts/validate_running.sh

  update_licenses: &update_licenses
    run:
      name: Update licenses
      command: source ci/scripts/ci_licenses.sh

jobs:
  build:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "example_java/build.gradle" }}
      - run:
          name: Build
          command: ./gradlew :inventory:build 
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "example_java/build.gradle" }}

  # Test Instrumentation with Android 4.1 JELLY_BEAN API 16
  test_instrumentation:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - *validate_running
      - *restore_gradle_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - run:
          name: Create debug apk
          command: ./gradlew assembleDebug assembleAndroidTest
      - run:
          name: Run Tests on Firebase test lab
          command: source ci/scripts/google_cloud.sh

  deploy_production:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - *restore_gradle_cache
      - run:
          name: Setup environment
          command: source ci/scripts/ci_setup.sh
      - run:
          name: Deploy production
          command: source ci/scripts/ci_deploy_production.sh
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "inventory/build.gradle" }}

  documentation:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - *restore_gradle_cache
      - run:
          name: Setup environment
          command: source ci/scripts/ci_setup.sh
      - run:
          name: Documentation
          command: source ci/scripts/ci_documentation.sh
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "inventory/build.gradle" }}

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build:
          context: org-global
      - test_instrumentation:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
      - documentation:
          context: org-global
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - master
      - deploy_production:
          context: org-global
          requires:
            - build
          filters:
            branches:
              only:
                - master
